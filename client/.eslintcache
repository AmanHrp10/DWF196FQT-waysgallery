[{"/home/amanudin/Documents/bootcamp/final-task/client/src/index.js":"1","/home/amanudin/Documents/bootcamp/final-task/client/src/App.js":"2","/home/amanudin/Documents/bootcamp/final-task/client/src/reportWebVitals.js":"3","/home/amanudin/Documents/bootcamp/final-task/client/src/components/molecules/landing/index.jsx":"4","/home/amanudin/Documents/bootcamp/final-task/client/src/components/atoms/button/index.jsx":"5","/home/amanudin/Documents/bootcamp/final-task/client/src/components/atoms/inputForm/index.jsx":"6","/home/amanudin/Documents/bootcamp/final-task/client/src/components/molecules/modalLogin/index.jsx":"7","/home/amanudin/Documents/bootcamp/final-task/client/src/components/molecules/modalRegister/index.jsx":"8","/home/amanudin/Documents/bootcamp/final-task/client/src/context/AppContext.jsx":"9","/home/amanudin/Documents/bootcamp/final-task/client/src/config/api.js":"10","/home/amanudin/Documents/bootcamp/final-task/client/src/components/molecules/navbar/index.jsx":"11","/home/amanudin/Documents/bootcamp/final-task/client/src/components/molecules/uploadPost/index.jsx":"12","/home/amanudin/Documents/bootcamp/final-task/client/src/pages/uploadPost/index.jsx":"13","/home/amanudin/Documents/bootcamp/final-task/client/src/components/molecules/hired/index.jsx":"14","/home/amanudin/Documents/bootcamp/final-task/client/src/pages/hire/index.jsx":"15","/home/amanudin/Documents/bootcamp/final-task/client/src/components/molecules/editProfile/index.jsx":"16","/home/amanudin/Documents/bootcamp/final-task/client/src/pages/home/index.jsx":"17","/home/amanudin/Documents/bootcamp/final-task/client/src/components/molecules/order/index.jsx":"18","/home/amanudin/Documents/bootcamp/final-task/client/src/components/routes/privateRoute/index.jsx":"19","/home/amanudin/Documents/bootcamp/final-task/client/src/components/atoms/inputFile/index.jsx":"20","/home/amanudin/Documents/bootcamp/final-task/client/src/components/molecules/offer/index.jsx":"21","/home/amanudin/Documents/bootcamp/final-task/client/src/components/molecules/profile/index.jsx":"22","/home/amanudin/Documents/bootcamp/final-task/client/src/pages/profile/index.jsx":"23","/home/amanudin/Documents/bootcamp/final-task/client/src/pages/editProfile/index.jsx":"24","/home/amanudin/Documents/bootcamp/final-task/client/src/pages/detailPost/index.jsx":"25","/home/amanudin/Documents/bootcamp/final-task/client/src/components/molecules/detailPost/index.jsx":"26","/home/amanudin/Documents/bootcamp/final-task/client/src/pages/detailUser/index.jsx":"27","/home/amanudin/Documents/bootcamp/final-task/client/src/components/molecules/detailUser/index.jsx":"28","/home/amanudin/Documents/bootcamp/final-task/client/src/components/atoms/textArea/index.jsx":"29","/home/amanudin/Documents/bootcamp/final-task/client/src/pages/test.jsx":"30","/home/amanudin/Documents/bootcamp/final-task/client/src/pages/transaction/index.jsx":"31","/home/amanudin/Documents/bootcamp/final-task/client/src/pages/uploadProject/index.jsx":"32","/home/amanudin/Documents/bootcamp/final-task/client/src/components/molecules/uploadProject/index.jsx":"33","/home/amanudin/Documents/bootcamp/final-task/client/src/components/atoms/inputDate/index.jsx":"34","/home/amanudin/Documents/bootcamp/final-task/client/src/components/atoms/modal/index.jsx":"35","/home/amanudin/Documents/bootcamp/final-task/client/src/pages/detailProject/index.jsx":"36","/home/amanudin/Documents/bootcamp/final-task/client/src/components/molecules/detailProject/index.jsx":"37","/home/amanudin/Documents/bootcamp/final-task/client/src/components/molecules/home/index.jsx":"38","/home/amanudin/Documents/bootcamp/final-task/client/src/components/molecules/following/index.jsx":"39","/home/amanudin/Documents/bootcamp/final-task/client/src/components/atoms/preview/index.jsx":"40","/home/amanudin/Documents/bootcamp/final-task/client/src/components/atoms/modalAlert/index.jsx":"41","/home/amanudin/Documents/bootcamp/final-task/client/src/components/molecules/todayPost/index.jsx":"42","/home/amanudin/Documents/bootcamp/final-task/client/src/components/atoms/loading/index.jsx":"43"},{"size":612,"mtime":1608213700106,"results":"44","hashOfConfig":"45"},{"size":2636,"mtime":1608980220274,"results":"46","hashOfConfig":"45"},{"size":362,"mtime":1608101451323,"results":"47","hashOfConfig":"45"},{"size":2058,"mtime":1608928643460,"results":"48","hashOfConfig":"45"},{"size":342,"mtime":1608999339042,"results":"49","hashOfConfig":"45"},{"size":443,"mtime":1608994496862,"results":"50","hashOfConfig":"45"},{"size":2752,"mtime":1610287616847,"results":"51","hashOfConfig":"45"},{"size":2337,"mtime":1608736734738,"results":"52","hashOfConfig":"45"},{"size":2830,"mtime":1610287578353,"results":"53","hashOfConfig":"45"},{"size":323,"mtime":1610286369732,"results":"54","hashOfConfig":"45"},{"size":3535,"mtime":1610289535412,"results":"55","hashOfConfig":"45"},{"size":4845,"mtime":1608992530946,"results":"56","hashOfConfig":"45"},{"size":287,"mtime":1608176081108,"results":"57","hashOfConfig":"45"},{"size":3656,"mtime":1608804291698,"results":"58","hashOfConfig":"45"},{"size":291,"mtime":1608178802723,"results":"59","hashOfConfig":"45"},{"size":8478,"mtime":1610280699019,"results":"60","hashOfConfig":"45"},{"size":7539,"mtime":1610264208932,"results":"61","hashOfConfig":"45"},{"size":4426,"mtime":1608951265171,"results":"62","hashOfConfig":"45"},{"size":604,"mtime":1609869158271,"results":"63","hashOfConfig":"45"},{"size":1418,"mtime":1608736606608,"results":"64","hashOfConfig":"45"},{"size":7110,"mtime":1609868497418,"results":"65","hashOfConfig":"45"},{"size":3528,"mtime":1610264389155,"results":"66","hashOfConfig":"45"},{"size":279,"mtime":1608724846429,"results":"67","hashOfConfig":"45"},{"size":289,"mtime":1608248050705,"results":"68","hashOfConfig":"45"},{"size":285,"mtime":1608249188096,"results":"69","hashOfConfig":"45"},{"size":4766,"mtime":1610262597409,"results":"70","hashOfConfig":"45"},{"size":285,"mtime":1608262688943,"results":"71","hashOfConfig":"45"},{"size":4605,"mtime":1610263813231,"results":"72","hashOfConfig":"45"},{"size":318,"mtime":1608497667222,"results":"73","hashOfConfig":"45"},{"size":503,"mtime":1608496424524,"results":"74","hashOfConfig":"45"},{"size":1705,"mtime":1608527911820,"results":"75","hashOfConfig":"45"},{"size":303,"mtime":1608471953137,"results":"76","hashOfConfig":"45"},{"size":4533,"mtime":1608736537825,"results":"77","hashOfConfig":"45"},{"size":0,"mtime":1608496495060,"results":"78","hashOfConfig":"45"},{"size":1228,"mtime":1608999148676,"results":"79","hashOfConfig":"45"},{"size":297,"mtime":1608570278836,"results":"80","hashOfConfig":"45"},{"size":4387,"mtime":1610263758482,"results":"81","hashOfConfig":"45"},{"size":529,"mtime":1609585708061,"results":"82","hashOfConfig":"45"},{"size":733,"mtime":1609584786695,"results":"83","hashOfConfig":"45"},{"size":654,"mtime":1608884263349,"results":"84","hashOfConfig":"45"},{"size":581,"mtime":1608928125715,"results":"85","hashOfConfig":"45"},{"size":1456,"mtime":1609811823554,"results":"86","hashOfConfig":"45"},{"size":310,"mtime":1609869408305,"results":"87","hashOfConfig":"45"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},"196c8dd",{"filePath":"91","messages":"92","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"90"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"90"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"90"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"90"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"90"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"90"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"90"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"90"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"90"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"90"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"90"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"90"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"90"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},"/home/amanudin/Documents/bootcamp/final-task/client/src/index.js",[],["188","189"],"/home/amanudin/Documents/bootcamp/final-task/client/src/App.js",["190","191"],"import 'bootstrap/dist/css/bootstrap.min.css';\n\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { useEffect, useContext } from 'react';\nimport { API, setToken } from './config/api';\nimport './App.css';\nimport Landing from './components/molecules/landing/index';\nimport UploadPage from './pages/uploadPost/index';\nimport HirePage from './pages/hire/index';\nimport EditProfile from './pages/editProfile';\nimport HomePage from './pages/home/index';\nimport PrivateRoute from './components/routes/privateRoute/index';\nimport { AppContext } from './context/AppContext';\nimport ProfilePage from './pages/profile/index';\nimport DetailPostPage from './pages/detailPost/index';\nimport DetailUserPage from './pages/detailUser/index';\nimport Test from './pages/test';\nimport Transaction from './pages/transaction/index';\nimport UploadProjectPage from './pages/uploadProject/index';\nimport DetailProjectPage from './pages/detailProject/index';\n\n//? Cek Token on headers\nif (localStorage.token) {\n  setToken(localStorage.token);\n}\n\nfunction App() {\n  const [state, dispatch] = useContext(AppContext);\n\n  //? Auth token\n  //* If token existed, web page not redirect to login page\n  const loadUser = async () => {\n    try {\n      const response = await API('/check-auth');\n\n      if (response.status === 401) {\n        return dispatch({\n          type: 'AUTH_ERROR',\n        });\n      }\n      dispatch({\n        type: 'USER_LOADED',\n        payload: response.data.data.user,\n      });\n    } catch (err) {\n      return dispatch({\n        type: 'AUTH_ERROR',\n      });\n    }\n  };\n\n  //? Check in token after render\n  useEffect(() => {\n    loadUser();\n  }, []);\n\n  return (\n    <Router>\n      <Switch>\n        <Route path='/landing' component={Landing} />\n        <PrivateRoute path='/upload' component={UploadPage} />\n        <PrivateRoute path='/hire/:id' component={HirePage} />\n        <PrivateRoute path='/edit-profile' component={EditProfile} />\n        <PrivateRoute path='/profile' component={ProfilePage} />\n        <PrivateRoute path='/detail-post/:id' component={DetailPostPage} />\n        <PrivateRoute path='/detail-user/:id' component={DetailUserPage} />\n        <PrivateRoute\n          path='/detail-project/:id'\n          component={DetailProjectPage}\n        />\n        <PrivateRoute path='/transaction' component={Transaction} />\n        <PrivateRoute\n          path='/upload-project/:id'\n          component={UploadProjectPage}\n        />\n\n        <Route path='/test' component={Test} />\n\n        <PrivateRoute path='/' component={HomePage} />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","/home/amanudin/Documents/bootcamp/final-task/client/src/reportWebVitals.js",[],"/home/amanudin/Documents/bootcamp/final-task/client/src/components/molecules/landing/index.jsx",[],"/home/amanudin/Documents/bootcamp/final-task/client/src/components/atoms/button/index.jsx",[],"/home/amanudin/Documents/bootcamp/final-task/client/src/components/atoms/inputForm/index.jsx",[],"/home/amanudin/Documents/bootcamp/final-task/client/src/components/molecules/modalLogin/index.jsx",["192"],"import { Fragment, useState, useContext } from 'react';\nimport { Modal } from 'react-bootstrap';\nimport InputForm from '../../atoms/inputForm/index';\nimport Button from '../../atoms/button/index';\nimport { API, setToken } from '../../../config/api';\nimport './modal.css';\nimport { AppContext } from '../../../context/AppContext';\nimport { useHistory } from 'react-router-dom';\nimport ModalAlert from '../../atoms/modalAlert/index';\n\nexport default function ModalLogin({ onHide, show }) {\n  const [state, dispatch] = useContext(AppContext);\n  const [popUp, setPopUp] = useState(false);\n  const [alert, setAlert] = useState({\n    text: '',\n  });\n  const [formData, setFormData] = useState({\n    email: '',\n    password: '',\n  });\n  const { email, password } = formData;\n\n  const router = useHistory();\n\n  const handleLogin = async (e) => {\n    e.preventDefault();\n    const body = JSON.stringify({ email, password });\n    const config = {\n      headers: {\n        'content-type': 'application/json',\n      },\n    };\n    try {\n      const response = await API.post('/login', body, config);\n      console.log(response);\n      if (response.data.status === 'Request failed') {\n        setAlert({\n          text: 'Login Failed',\n        });\n        setPopUp(true);\n      }\n      // ? Context\n      dispatch({\n        type: 'LOGIN',\n        payload: response.data.data.user,\n      });\n\n      //? take a token\n      setToken(response.data.data.user.token);\n      setAlert({\n        text: 'Login Succes',\n      });\n      setPopUp(true);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const handleChange = (e) => {\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n  };\n\n  const handlePopUp = () => {\n    setPopUp(false);\n    router.push('/');\n    return show;\n  };\n  return (\n    <Fragment>\n      <Modal show={show} onHide={handlePopUp}>\n        <div className='wrapper-modal'>\n          <h3 style={{ color: '#2FC4B2', fontWeight: '900' }}>Login</h3>\n          <InputForm\n            type='text'\n            name='email'\n            value={email}\n            title='Email'\n            className='mb-3'\n            onChange={(e) => handleChange(e)}\n          />\n          <InputForm\n            type='password'\n            title='Password'\n            value={password}\n            className='mb-3'\n            name='password'\n            onChange={(e) => handleChange(e)}\n          />\n          <Button\n            title='Login'\n            className='button-register btn-sm w-100 text-white '\n            onClick={handleLogin}\n          />\n        </div>\n      </Modal>\n      <ModalAlert\n        className='modal-alert'\n        popUp={popUp}\n        handlePopUp={handlePopUp}\n        text={alert.text}\n      />\n    </Fragment>\n  );\n}\n","/home/amanudin/Documents/bootcamp/final-task/client/src/components/molecules/modalRegister/index.jsx",["193"],"import { Fragment, useState, useContext } from 'react';\nimport { Modal } from 'react-bootstrap';\nimport InputForm from '../../atoms/inputForm/index';\nimport Button from '../../atoms/button/index';\nimport './modalRegister.css';\nimport { API, setToken } from '../../../config/api';\nimport { useHistory } from 'react-router-dom';\nimport { AppContext } from '../../../context/AppContext';\n\nexport default function ModalRegister({ onHide, show, isRegister }) {\n  const [state, dispatch] = useContext(AppContext);\n  const [formData, setFormData] = useState({\n    email: '',\n    password: '',\n    fullname: '',\n  });\n\n  const router = useHistory();\n\n  const handlePost = async (e) => {\n    e.preventDefault();\n    const body = formData;\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    };\n    try {\n      const response = await API.post('/register', body, config);\n\n      setFormData({\n        email: '',\n        password: '',\n        fullname: '',\n      });\n      //? Context\n      dispatch({\n        type: 'LOGIN',\n        payload: response.data.data.user,\n      });\n\n      //? take a token\n      setToken(response.data.data.user.token);\n\n      router.push('/');\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const handleChange = (e) => {\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n  };\n  return (\n    <Fragment>\n      <Modal show={show} onHide={onHide}>\n        <div className='wrapper-modal'>\n          <h3 style={{ color: '#2FC4B2', fontWeight: '900' }}>Register</h3>\n          <InputForm\n            type='text'\n            title='Email'\n            className='mb-3'\n            name='email'\n            onChange={(e) => handleChange(e)}\n          />\n          <InputForm\n            type='password'\n            title='Password'\n            className='mb-3'\n            name='password'\n            onChange={(e) => handleChange(e)}\n          />\n          <InputForm\n            type='text'\n            title='Full Name'\n            className='mb-3'\n            name='fullname'\n            onChange={(e) => handleChange(e)}\n          />\n          <Button\n            title='Register'\n            className='button-register btn-sm w-100 text-white'\n            onClick={(e) => handlePost(e)}\n          />\n        </div>\n      </Modal>\n    </Fragment>\n  );\n}\n","/home/amanudin/Documents/bootcamp/final-task/client/src/context/AppContext.jsx",[],"/home/amanudin/Documents/bootcamp/final-task/client/src/config/api.js",[],"/home/amanudin/Documents/bootcamp/final-task/client/src/components/molecules/navbar/index.jsx",["194","195","196"],"/home/amanudin/Documents/bootcamp/final-task/client/src/components/molecules/uploadPost/index.jsx",[],"/home/amanudin/Documents/bootcamp/final-task/client/src/pages/uploadPost/index.jsx",[],"/home/amanudin/Documents/bootcamp/final-task/client/src/components/molecules/hired/index.jsx",[],"/home/amanudin/Documents/bootcamp/final-task/client/src/pages/hire/index.jsx",[],"/home/amanudin/Documents/bootcamp/final-task/client/src/components/molecules/editProfile/index.jsx",["197","198","199","200"],"import { Fragment, useState, useContext } from 'react';\nimport { AiOutlineCloudUpload } from 'react-icons/ai';\nimport InputForm from '../../atoms/inputForm/index';\nimport Button from '../../atoms/button/index';\nimport { AiOutlineCamera } from 'react-icons/ai';\nimport InputFile from '../../atoms/inputFile/index';\nimport './editProfile.css';\nimport { AppContext } from '../../../context/AppContext';\nimport { useHistory } from 'react-router-dom';\nimport { API } from '../../../config/api';\nimport Dropzone from 'react-dropzone';\nimport Preview from '../../atoms/preview/index';\nimport { FiPlus } from 'react-icons/fi';\n\nexport default function EditProfile() {\n  const [state, dispatch] = useContext(AppContext);\n  const user = JSON.parse(localStorage.getItem('user'));\n  const [loading, setLoading] = useState(true);\n  const [previews, setPreviews] = useState([]);\n  const [artData, setArtData] = useState({\n    arts: [],\n  });\n  const [formData, setFormData] = useState({\n    fullname: user.name,\n    greeting: user.greeting,\n    avatar: '',\n  });\n\n  const { avatar, greeting, fullname } = formData;\n  const router = useHistory();\n\n  const handleUpdate = async (e) => {\n    e.preventDefault();\n\n    const body = new FormData();\n    body.append('fullname', fullname);\n    body.append('greeting', greeting);\n    body.append('avatar', avatar);\n    const config = {\n      headers: {\n        'content-type': 'multipart/form-data',\n      },\n    };\n    try {\n      const response = await API.patch(`/user`, body, config);\n\n      dispatch({\n        type: 'EDIT_USER',\n        payload: response.data.data.user,\n      });\n      router.push('/profile');\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const handleForm = (e) => {\n    const updateForm = {\n      ...formData,\n    };\n    updateForm[e.target.name] =\n      e.target.type === 'file' ? e.target.files[0] : e.target.value;\n    setFormData(updateForm);\n  };\n\n  const uploadArt = async (files) => {\n    const body = new FormData();\n\n    if (files.length > 5) {\n      alert('Max select 5 file');\n      return;\n    }\n\n    files.map((file) => body.append('arts', file));\n\n    const config = {\n      headers: {\n        'content-type': 'multipart/form-data',\n      },\n    };\n    try {\n      setLoading(true);\n      const response = await API.post('/art', body, config);\n\n      if (response.data.status !== 'Request success') {\n        setLoading(false);\n      }\n\n      alert('Your Art was uploaded');\n      setLoading(false);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const handleDrop = (acceptedFiles, rejectedFiles) => {\n    if (rejectedFiles.length > 0) {\n      alert('Please select image only');\n      console.log(rejectedFiles);\n      console.log(acceptedFiles);\n      return;\n    }\n\n    if (acceptedFiles.length > 5) {\n      alert('Please select max 5 file');\n\n      return;\n    }\n\n    if (acceptedFiles.length > 1) {\n      if (previews.length === 0) {\n        uploadArt(acceptedFiles);\n\n        setPreviews(...previews, acceptedFiles);\n      } else {\n        const data = [...previews];\n        const indexArr = data.length;\n\n        for (let i = 0; i < acceptedFiles.length; i++) {\n          data[indexArr + i] = acceptedFiles[i];\n        }\n        setPreviews(data);\n      }\n    } else {\n      uploadArt(acceptedFiles);\n      setPreviews([...previews, acceptedFiles[0]]);\n    }\n  };\n\n  console.log(previews);\n\n  return (\n    <Fragment>\n      <div className='container' style={{ marginTop: '110px' }}>\n        <form action='' onSubmit={(e) => handleUpdate(e)}>\n          <div className='row wrapper-upload-post mt-5'>\n            <div className='col-8'>\n              <Dropzone\n                onDrop={handleDrop}\n                maxSize={5 * 1000 * 1000}\n                accept='image/*'\n              >\n                {({ getRootProps, getInputProps }) => (\n                  <section>\n                    <div {...getRootProps()}>\n                      <input {...getInputProps()} />\n                      {previews.length > 0 ? (\n                        <Preview file={previews[0]} isMainPreview />\n                      ) : (\n                        <InputFile\n                          onChange={(e) => handleForm(e)}\n                          name='image'\n                          width='520px'\n                          height='300px'\n                          icon={\n                            <AiOutlineCloudUpload size='10em' color='#e7e7e7' />\n                          }\n                          title={\n                            <p>\n                              <span style={{ color: '#2FC4B2' }}>Brouse,</span>{' '}\n                              to choose a file\n                            </p>\n                          }\n                        />\n                      )}\n                    </div>\n                  </section>\n                )}\n              </Dropzone>\n            </div>\n            <div className='col-4'>\n              <div className='' style={{ marginLeft: '70px' }}>\n                <InputFile\n                  name='avatar'\n                  onChange={(e) => handleForm(e)}\n                  borderRadius='50%'\n                  width='65%'\n                  height='140px'\n                  icon={<AiOutlineCamera size='5em' color='#e7e7e7' />}\n                />\n              </div>\n              <InputForm\n                name='greeting'\n                value={greeting}\n                title='Greeting'\n                className='my-3'\n                onChange={(e) => handleForm(e)}\n              />\n              <InputForm\n                title='Full Name'\n                onChange={(e) => handleForm(e)}\n                name='fullname'\n                value={fullname}\n              />\n              <div className='d-flex justify-content-around px-5 mt-5'>\n                <Button title='Cancel' className='button-cancel btn-sm px-4' />\n                <Button\n                  title='Post'\n                  type='submit'\n                  className='button-post btn-sm px-4 text-white'\n                  style={{ color: '#000' }}\n                />\n              </div>\n            </div>\n          </div>\n          <div className='row wrapper-upload-post mt-3'>\n            <div className='col-8'>\n              <div className='upload-post-child'>\n                <div className='row'>\n                  <div className='col-3'>\n                    {previews[1] ? (\n                      <Preview file={previews[1]} />\n                    ) : (\n                      <InputFile\n                        // onChange={(e) => handleFile(e)}\n                        name='image'\n                        width='100%'\n                        height='90px'\n                        icon={<FiPlus size='5em' color='#e7e7e7' />}\n                      />\n                    )}\n                  </div>\n                  <div className='col-3'>\n                    {previews[2] ? (\n                      <Preview file={previews[2]} />\n                    ) : (\n                      <InputFile\n                        // onChange={(e) => handleFile(e)}\n                        name='image'\n                        width='100%'\n                        height='90px'\n                        icon={<FiPlus size='5em' color='#e7e7e7' />}\n                      />\n                    )}\n                  </div>\n                  <div className='col-3'>\n                    {previews[3] ? (\n                      <Preview file={previews[3]} />\n                    ) : (\n                      <InputFile\n                        // onChange={(e) => handleFile(e)}\n                        name='image'\n                        width='100%'\n                        height='90px'\n                        icon={<FiPlus size='5em' color='#e7e7e7' />}\n                      />\n                    )}\n                  </div>\n                  <div className='col-3'>\n                    {previews[4] ? (\n                      <Preview file={previews[4]} />\n                    ) : (\n                      <InputFile\n                        // onChange={(e) => handleFile(e)}\n                        name='image'\n                        width='100%'\n                        height='90px'\n                        icon={<FiPlus size='5em' color='#e7e7e7' />}\n                      />\n                    )}\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </form>\n      </div>\n    </Fragment>\n  );\n}\n","/home/amanudin/Documents/bootcamp/final-task/client/src/pages/home/index.jsx",["201","202","203","204","205"],"import { Fragment, useEffect, useState } from 'react';\nimport { Dropdown, ButtonGroup, Button } from 'react-bootstrap';\nimport { useHistory } from 'react-router-dom';\nimport { API } from '../../config/api';\nimport InputForm from '../../components/atoms/inputForm/index';\nimport Home from '../../components/molecules/home/index';\nimport './home.css';\nimport Navbar from '../../components/molecules/navbar';\nimport Following from '../../components/molecules/following';\nimport TodaysPost from '../../components/molecules/todayPost/index';\nimport Loading from '../../components/atoms/loading';\n\nexport default function HomePage() {\n  const [posts, setPosts] = useState([]);\n  const [userFollow, setUserFollow] = useState([]);\n  const [dataFilter, setDataFilter] = useState([]);\n  const [todays, setTodays] = useState([]);\n  const [text, setText] = useState([]);\n  const [dropDown, setDropDown] = useState('All');\n  const [loading, setLoading] = useState(true);\n  let [search, setSearch] = useState({\n    query: '',\n  });\n\n  const router = useHistory();\n\n  //? Handle Dropdown\n  const handleAll = () => {\n    setDropDown('All');\n  };\n  const handleTodays = () => {\n    setDropDown(\"Today's\");\n  };\n  const handleFollow = () => {\n    setDropDown('Following');\n  };\n\n  //? All Posts\n  const fetchPost = async () => {\n    try {\n      setLoading(true);\n      const response = await API(`/posts`);\n\n      const dataPost = response.data.data.posts;\n\n      //? init array\n      let photo = [];\n      for (let i = 0; i < dataPost.length; i++) {\n        photo[i] = {\n          src:\n            dataPost[i].photos.length === 0\n              ? null\n              : dataPost[i].photos[0].image,\n          width: i % 2 == 0 ? 4 : 6,\n          height: i % 2 == 1 ? 4 : 3,\n          to: `/detail-post/${dataPost[i].id}`,\n          id: dataPost[i].id,\n        };\n      }\n\n      photo.sort((a, b) => b.id - a.id);\n\n      setPosts(photo);\n      setLoading(false);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  //? Following\n  const fetchFollowing = async () => {\n    try {\n      setLoading(true);\n      const response = await API(`/follow`);\n      const dataPost = response.data.data.following;\n\n      //? init array\n      let photo = [];\n      for (let i = 0; i < dataPost.length; i++) {\n        photo[i] = {\n          src:\n            dataPost[i].photos.length === 0\n              ? null\n              : dataPost[i].photos[0].image,\n          width: i % 2 == 0 ? 4 : 4,\n          height: i % 2 == 1 ? 4 : 2,\n          to: `/detail-post/${dataPost[i].id}`,\n          id: dataPost[i].id,\n        };\n      }\n\n      photo.sort((a, b) => b.id - a.id);\n\n      setUserFollow(photo);\n      setLoading(false);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  //? Todays\n  const fetchTodays = async () => {\n    try {\n      const response = await API('/posts');\n\n      const dataPost = response.data.data.posts;\n\n      const filterData = dataPost.filter(\n        (data) =>\n          Date.now() - new Date(data.createdAt).getTime() < 24 * 60 * 60 * 1000\n      );\n\n      //? init array\n      let photo = [];\n      for (let i = 0; i < filterData.length; i++) {\n        photo[i] = {\n          src:\n            filterData[i].photos.length === 0\n              ? null\n              : filterData[i].photos[0].image,\n          width: 5,\n          height: i % 2 == 0 ? 3 : 4,\n          to: `/detail-post/${filterData[i].id}`,\n          id: filterData[i].id,\n        };\n      }\n\n      photo.sort((a, b) => b.id - a.id);\n\n      setTodays(photo);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const handlePosts = (e) => {\n    const to = e.target.getAttribute('to');\n    router.push(to);\n  };\n\n  const handleSearch = async (e) => {\n    let keyword = e.target.value;\n\n    const body = JSON.stringify({ title: keyword });\n    const config = {\n      headers: {\n        'content-type': 'application/json',\n      },\n    };\n    try {\n      const response = await API.post('/search', body, config);\n\n      if (response.data.status === 'Request failed') {\n        setDataFilter([]);\n      }\n      const dataPost = response.data.data.posts;\n\n      // //? init array\n      let photo = [];\n      for (let i = 0; i < dataPost.length; i++) {\n        photo[i] = {\n          src:\n            dataPost[i].photos.length === 0\n              ? null\n              : dataPost[i].photos[0].image,\n          width: 4,\n          height: 2,\n          to: `/detail-post/${dataPost[i].id}`,\n          id: dataPost[i].id,\n        };\n      }\n\n      photo.sort((a, b) => b.id - a.id);\n      setDataFilter(photo);\n      setText(dataPost);\n    } catch (err) {\n      console.log(err);\n    }\n\n    setSearch((search = keyword));\n  };\n\n  useEffect(() => {\n    fetchFollowing();\n    fetchPost();\n    fetchTodays();\n  }, []);\n\n  console.log(text);\n  return loading ? (\n    <Loading />\n  ) : (\n    <Fragment>\n      <Navbar />\n      <div className='container' style={{ marginTop: '110px' }}>\n        <div className='row justify-content-between'>\n          <div className='col-3'>\n            <Dropdown as={ButtonGroup}>\n              <div className='dropdown-home'>\n                <Button\n                  style={{\n                    color: '#000',\n                    hover: 'none',\n                  }}\n                >\n                  {dropDown}\n                </Button>\n                <Dropdown.Toggle\n                  split\n                  id='dropdown-split-basic'\n                  style={{ color: '#000', hover: 'none' }}\n                />\n              </div>\n\n              <Dropdown.Menu>\n                <Dropdown.Item href='' onClick={handleAll}>\n                  All\n                </Dropdown.Item>\n                <Dropdown.Item href='' onClick={handleTodays}>\n                  Today's\n                </Dropdown.Item>\n                <Dropdown.Item href='' onClick={handleFollow}>\n                  Following\n                </Dropdown.Item>\n              </Dropdown.Menu>\n            </Dropdown>\n          </div>\n\n          <div className='col-3 text-right'>\n            <InputForm title={`Search`} onChange={handleSearch} />\n          </div>\n        </div>\n        {dropDown === 'All' ? (\n          <div className='mt-4'>\n            {loading ? (\n              ''\n            ) : search.length == null ? (\n              <Home onClick={handlePosts} photos={posts} key={posts.id} />\n            ) : (\n              <Home\n                onClick={handlePosts}\n                photos={dataFilter}\n                key={dataFilter.id}\n              />\n            )}\n          </div>\n        ) : dropDown === 'Following' ? (\n          <div className='mt-4'>\n            {search.length == null ? (\n              <Following\n                onClick={handlePosts}\n                photos={userFollow}\n                key={userFollow.id}\n              />\n            ) : (\n              <Following\n                onClick={handlePosts}\n                photos={dataFilter}\n                key={dataFilter.id}\n              />\n            )}\n          </div>\n        ) : dropDown === \"Today's\" ? (\n          <div className='mt-4'>\n            {search.length == null ? (\n              <TodaysPost\n                onClick={handlePosts}\n                photos={todays}\n                key={todays.id}\n              />\n            ) : (\n              <TodaysPost\n                onClick={handlePosts}\n                photos={dataFilter}\n                key={dataFilter.id}\n              />\n            )}\n          </div>\n        ) : null}\n      </div>\n    </Fragment>\n  );\n}\n","/home/amanudin/Documents/bootcamp/final-task/client/src/components/molecules/order/index.jsx",[],"/home/amanudin/Documents/bootcamp/final-task/client/src/components/routes/privateRoute/index.jsx",[],"/home/amanudin/Documents/bootcamp/final-task/client/src/components/atoms/inputFile/index.jsx",[],"/home/amanudin/Documents/bootcamp/final-task/client/src/components/molecules/offer/index.jsx",["206"],"import { Fragment, useState, useEffect } from 'react';\nimport { Table } from 'react-bootstrap';\nimport { API } from '../../../config/api';\nimport Button from '../../atoms/button';\nimport Moment from 'moment';\nimport { FcCancel } from 'react-icons/fc';\nimport { AiOutlineCheckCircle, AiOutlineLine } from 'react-icons/ai';\nimport { useHistory } from 'react-router-dom';\nimport ModalPopUp from '../../atoms/modal';\nimport Loading from '../../atoms/loading';\n\nexport default function Offer() {\n  let [datas, setDatas] = useState([]);\n  const [showModal, setShowModal] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [text, setText] = useState('');\n  const [detail, setDetail] = useState('');\n\n  const router = useHistory();\n\n  const transaction = async () => {\n    try {\n      setLoading(true);\n      const response = await API('/transaction?status=my-offer');\n      setDatas(response.data.data.orders);\n      console.log('transaction');\n      setLoading(false);\n      setText('render');\n      console.log(loading);\n    } catch (err) {\n      console.log(err);\n      setLoading(false);\n    }\n  };\n\n  const approveProject = async (e, hireId) => {\n    e.preventDefault();\n    console.log(e.target);\n    try {\n      await API.put(`/hire/${hireId}`);\n      setText('accept');\n      setShowModal(false);\n    } catch (err) {\n      console.log(err);\n      setLoading(false);\n    }\n  };\n\n  const rejectProject = async (e, hireId) => {\n    e.preventDefault();\n    console.log(e.target);\n    try {\n      await API.delete(`/hire/${hireId}`);\n      setText('reject');\n      setShowModal(false);\n    } catch (err) {\n      console.log(err);\n      setLoading(false);\n    }\n  };\n\n  const handlePopUp = async (e) => {\n    try {\n      setShowModal(true);\n\n      const response = await API(`/transaction/offer/${e.target.id}`);\n      setDetail(response.data.data.offer);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  useEffect(() => {\n    transaction();\n  }, [text]);\n\n  console.log(datas);\n\n  return loading ? (\n    <Loading />\n  ) : (\n    <Fragment>\n      <div className='container'>\n        <Table striped bordered hover>\n          <thead>\n            <tr className='text-center'>\n              <th>No</th>\n              <th>Client</th>\n              <th>Order</th>\n              <th>Start Project</th>\n              <th>End Project</th>\n              <th>Status</th>\n              <th>Action</th>\n            </tr>\n          </thead>\n          {datas.length > 0 &&\n            datas\n              .sort((a, b) => b.id - a.id)\n              .map((data, index) => {\n                return loading ? (\n                  <Loading />\n                ) : (\n                  <>\n                    <ModalPopUp\n                      show={showModal}\n                      onHide={() => setShowModal(false)}\n                      title={detail.title}\n                      description={detail.description}\n                      price={detail.price}\n                      approve={(e) => approveProject(e, detail.id)}\n                      reject={(e) => rejectProject(e, detail.id)}\n                    />\n                    <tbody\n                      style={{\n                        textOverflow: 'ellipsis',\n                        overflow: 'hidden',\n                        width: '100%',\n                        whiteSpace: 'nowrap',\n                      }}\n                    >\n                      <tr key={index}>\n                        <td>{index + 1}</td>\n                        <td>{data.orderBy.map((user) => user.fullname)}</td>\n                        <td\n                          id={data.id}\n                          style={{ cursor: 'pointer' }}\n                          onClick={handlePopUp}\n                        >\n                          {data.title}\n                        </td>\n                        <td>{Moment(data.started).format('LL')}</td>\n                        <td>{Moment(data.finished).format('LL')}</td>\n                        <td\n                          className={`text-center ${\n                            data.status === 'Waiting Accept'\n                              ? 'text-warning'\n                              : data.status === 'Success'\n                              ? 'text-info'\n                              : data.status === 'Cancel'\n                              ? 'text-danger'\n                              : data.status === 'Complete'\n                              ? 'text-info'\n                              : data.status === 'Confirm'\n                              ? 'text-success'\n                              : null\n                          }`}\n                        >\n                          {data.status === 'Waiting Accept'\n                            ? 'Waiting Accept'\n                            : data.status === 'Success'\n                            ? 'Send a Project!'\n                            : data.status === 'Cancel'\n                            ? 'Canceled'\n                            : data.status === 'Complete'\n                            ? 'Waiting Confirm'\n                            : data.status === 'Confirm'\n                            ? 'Success'\n                            : null}\n                        </td>\n                        <td className='text-center'>\n                          {data.status === 'Waiting Accept' ? (\n                            <div className='d-flex justify-content-center'>\n                              <Button\n                                title='Cancel'\n                                className='btn-sm text-white'\n                                style={{ background: 'red' }}\n                                onClick={(e) => rejectProject(e, data.id)}\n                              />\n                              <Button\n                                title='Approve'\n                                className='btn-sm text-white ml-3'\n                                style={{ background: '#0ACF83' }}\n                                onClick={(e) => approveProject(e, data.id)}\n                              />\n                            </div>\n                          ) : data.status === 'Success' ? (\n                            <Button\n                              title='Send Project'\n                              className='btn-sm button-post text-white'\n                              onClick={() =>\n                                router.push(`/upload-project/${data.id}`)\n                              }\n                            />\n                          ) : data.status === 'Cancel' ? (\n                            <FcCancel color='#red' />\n                          ) : data.status === 'Confirm' ? (\n                            <AiOutlineCheckCircle color='#0ACF83' />\n                          ) : data.status === 'Complete' ? (\n                            <AiOutlineLine color='#17a2b8' />\n                          ) : null}\n                        </td>\n                      </tr>\n                    </tbody>\n                  </>\n                );\n              })}\n        </Table>\n      </div>\n    </Fragment>\n  );\n}\n","/home/amanudin/Documents/bootcamp/final-task/client/src/components/molecules/profile/index.jsx",["207"],"import { Fragment, useState, useEffect } from 'react';\nimport Button from '../../atoms/button';\nimport DefaultProfile from '../../../images/defaultProfile.png';\nimport './profile.css';\nimport { useHistory } from 'react-router-dom';\nimport { API } from '../../../config/api';\nimport Loading from '../../atoms/loading';\n\nexport default function Profile() {\n  const [profile, setProfile] = useState('');\n  const [postLates, setPostLates] = useState('');\n  const [loading, setLoading] = useState(true);\n\n  const fetchUser = async () => {\n    try {\n      setLoading(true);\n      const response = await API('/user');\n      setProfile(response.data.data.user);\n\n      const latesPost =\n        response.data.data.user.posts &&\n        response.data.data.user.posts\n          .sort((a, b) => {\n            return b.id - a.id;\n          })\n          .slice(0, 1);\n      setPostLates(latesPost);\n\n      setLoading(false);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  useEffect(() => {\n    fetchUser();\n  }, []);\n\n  const imageLates = postLates[0] ? postLates[0].photos[0].image : null;\n\n  const router = useHistory();\n\n  return loading ? (\n    <Loading />\n  ) : (\n    <Fragment>\n      <div className='container' style={{ marginTop: '110px' }}>\n        <div className='row'>\n          <div className='col-6'>\n            <div className='image-profile'>\n              <img\n                src={JSON.parse(profile.avatar).path}\n                alt=''\n                width='100%'\n                style={{ backgroundSize: 'cover' }}\n              />\n            </div>\n            <h5>{!profile ? 'Random' : profile.fullname}</h5>\n            <h2>{!profile.greeting ? 'Say Hello' : profile.greeting}</h2>\n\n            <Button\n              title='Edit Profile'\n              className='button-post text-white btn-sm mt-5'\n              onClick={() => router.push('/edit-profile')}\n            />\n          </div>\n          <div className='col-6 justify-content-right'>\n            <div\n              className='thumbnail-profile'\n              onClick={() =>\n                !imageLates\n                  ? router.push('/upload')\n                  : router.push(`/detail-post/${postLates[0].id}`)\n              }\n            >\n              <img\n                src={imageLates}\n                alt='Lates Post'\n                width='100%'\n                height='100%'\n                style={{\n                  padding: '24px',\n                  borderRadius: '10px',\n                  objectFit: 'cover',\n                }}\n              />\n              <div className='background'></div>\n            </div>\n          </div>\n        </div>\n        <div className='my-work my-5'>\n          <h5 className='text-bold'>My Works</h5>\n          <div className='row'>\n            {profile.arts.length === 0 ? (\n              <h1 className='text-secondary mt-5 mx-auto' style={{}}>\n                Not art\n              </h1>\n            ) : (\n              profile.arts &&\n              profile.arts\n                .sort((a, b) => b.id - a.id)\n                .map((art) => {\n                  return (\n                    <div className='col-3 p-2' style={{ height: '200px' }}>\n                      <img\n                        src={art.artImage}\n                        alt=''\n                        width='100%'\n                        height='100%'\n                      />\n                    </div>\n                  );\n                })\n            )}\n          </div>\n        </div>\n      </div>\n    </Fragment>\n  );\n}\n","/home/amanudin/Documents/bootcamp/final-task/client/src/pages/profile/index.jsx",[],"/home/amanudin/Documents/bootcamp/final-task/client/src/pages/editProfile/index.jsx",[],"/home/amanudin/Documents/bootcamp/final-task/client/src/pages/detailPost/index.jsx",[],"/home/amanudin/Documents/bootcamp/final-task/client/src/components/molecules/detailPost/index.jsx",["208","209","210","211"],"import { Fragment, useContext, useEffect, useState } from 'react';\nimport Button from '../../atoms/button';\nimport DefaultProfile from '../../../images/defaultProfile.png';\nimport './detailPost.css';\nimport { AppContext } from '../../../context/AppContext';\nimport { useParams, useHistory } from 'react-router-dom';\nimport { API } from '../../../config/api';\nimport Loading from '../../atoms/loading/index';\n\nexport default function DetailPost() {\n  const [state, dispatch] = useContext(AppContext);\n  const [indexImage, setIndexImage] = useState(0);\n  const [post, setPost] = useState('');\n  const [loading, setLoading] = useState(true);\n  let [isFollow, setIsFollow] = useState(true);\n  const user = JSON.parse(localStorage.getItem('user'));\n\n  const router = useHistory();\n  const { id } = useParams();\n\n  //? Fetch Post\n  const fetchDetailPost = async () => {\n    try {\n      //* Before data ready\n      setLoading(true);\n\n      const response = await API(`/post/${id}`);\n      setPost(response.data.data.post);\n\n      //* After Data ready\n      setLoading(false);\n      setIsFollow(false);\n\n      const checkFollow = await API(\n        `/follow/${response.data.data.post.user.id}`\n      );\n      checkFollow.data.data.follow === null\n        ? setIsFollow(false)\n        : setIsFollow(true);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  //? Handle switch image preview\n  const handleChangeImage = (e) => {\n    setIndexImage(e.target.id);\n  };\n\n  const follow = async () => {\n    try {\n      await API.post(`/follow/${post.user.id}`);\n      setIsFollow((isFollow = !isFollow));\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const unFollow = async () => {\n    try {\n      await API.delete(`/follow/${post.user.id}`);\n      setIsFollow((isFollow = !isFollow));\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  //? Side Effect\n  useEffect(() => {\n    fetchDetailPost();\n  }, []);\n\n  loading ? console.log('loading') : console.log(post.user.id);\n  return loading ? (\n    <Loading />\n  ) : (\n    <Fragment>\n      <div\n        className='container'\n        style={{ marginTop: '110px', padding: '0 200px' }}\n      >\n        <div className='header-post d-flex'>\n          <div className='image-profile-detail-post'>\n            <img\n              style={{ cursor: 'pointer' }}\n              onClick={\n                user.id === post.user.id\n                  ? () => router.push('/profile')\n                  : () => router.push(`/detail-user/${post.user.id}`)\n              }\n              src={JSON.parse(post.user.avatar).path}\n              alt=''\n              width='100%'\n            />\n          </div>\n          <div className='desc-post mt-1'>\n            <h6 style={{ fontWeight: 'bold' }}>{post.title}</h6>\n            <p style={{ marginTop: '-10px' }}>\n              {post.user && post.user.fullname}\n            </p>\n          </div>\n          <div\n            className='button-action ml-auto mt-2'\n            style={{\n              display: post.user && post.user.id === user.id ? 'none' : '',\n            }}\n          >\n            <Button\n              style={{ display: loading ? 'none' : '' }}\n              title={isFollow ? 'Unfollow' : 'Follow'}\n              onClick={isFollow ? unFollow : follow}\n              className={\n                isFollow\n                  ? 'button-danger text-white btn-sm px-4'\n                  : 'button-cancel btn-sm px-4'\n              }\n            />\n            <Button\n              onClick={() => router.push(`/hire/${post.user.id}`)}\n              title='Hire'\n              className='button-post text-white ml-3 px-4 btn-sm'\n            />\n          </div>\n        </div>\n        <div className='image-post-preview mt-3'>\n          <img\n            src={post.photos[indexImage].image}\n            alt=''\n            width='100%'\n            height='100%'\n            style={{ borderRadius: '4px', objectFit: 'fill' }}\n          />\n        </div>\n        <div className='sub-image d-flex'>\n          {post.photos.map((photo, index) => (\n            <img\n              style={{\n                marginRight: '10px',\n                borderRadius: '4px',\n                cursor: 'pointer',\n                objectFit: 'cover',\n              }}\n              width='100%'\n              key={index}\n              id={index}\n              src={photo.image}\n              alt=''\n              onClick={(e) => handleChangeImage(e)}\n            />\n          ))}\n        </div>\n        <div className='greeting mt-5'>\n          <p>\n            <span style={{ fontWeight: 'bold' }}>Say Hello</span>,{' '}\n            <span style={{ color: '#2FC4B2' }}>{user && user.name}</span>\n          </p>\n          <p>{post.description}</p>\n        </div>\n      </div>\n    </Fragment>\n  );\n}\n","/home/amanudin/Documents/bootcamp/final-task/client/src/pages/detailUser/index.jsx",[],"/home/amanudin/Documents/bootcamp/final-task/client/src/components/molecules/detailUser/index.jsx",["212"],"import { Fragment, useEffect, useState } from 'react';\nimport Button from '../../atoms/button';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { API } from '../../../config/api';\nimport Loading from '../../atoms/loading';\n\nexport default function DetailUser() {\n  const [user, setUser] = useState('');\n  const [postLates, setPostLates] = useState('');\n  const [loading, setLoading] = useState(true);\n  let [isFollow, setIsFollow] = useState(true);\n  const localUser = JSON.parse(localStorage.getItem('user'));\n\n  const router = useHistory();\n  const { id } = useParams();\n\n  const fetchUser = async () => {\n    try {\n      setLoading(true);\n      const response = await API(`/user/${id}`);\n\n      setUser(response.data.data.user);\n      const latesPost =\n        response.data.data.user.posts &&\n        response.data.data.user.posts\n          .sort((a, b) => {\n            return b.id - a.id;\n          })\n          .slice(0, 1);\n      setPostLates(latesPost);\n\n      setLoading(false);\n      setIsFollow(false);\n\n      const checkFollow = await API(`/follow/${id}`);\n      checkFollow.data.data.follow === null\n        ? setIsFollow(false)\n        : setIsFollow(true);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const follow = async () => {\n    try {\n      await API.post(`/follow/${id}`);\n      setIsFollow((isFollow = !isFollow));\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const unFollow = async () => {\n    try {\n      await API.delete(`/follow/${id}`);\n      setIsFollow((isFollow = !isFollow));\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const imageLates = postLates[0] ? postLates[0].photos[0].image : null;\n\n  useEffect(() => {\n    fetchUser();\n  }, []);\n\n  console.log(isFollow);\n  return loading ? (\n    <Loading />\n  ) : (\n    <Fragment>\n      <div className='container' style={{ marginTop: '110px' }}>\n        <div className='row'>\n          <div className='col-6'>\n            <div className='image-profile'>\n              <img src={user && user.avatar} alt='' width='100%' />\n            </div>\n            <h5>{user.fullname}</h5>\n            <h2>{user.greeting}</h2>\n\n            <div className='button-detail-user'>\n              {user.id === localUser.id ? (\n                <Button\n                  title='Edit Profile'\n                  className='button-post text-white btn-sm mt-5'\n                  onClick={() => router.push('/edit-profile')}\n                />\n              ) : (\n                <>\n                  <Button\n                    onClick={isFollow ? unFollow : follow}\n                    title={isFollow ? 'Unfollow' : 'Follow'}\n                    className={\n                      isFollow\n                        ? 'button-danger text-white btn-sm mt-4 mr-3 px-4'\n                        : 'button-cancel btn-sm mt-4 mr-3 px-4'\n                    }\n                  />\n                  <Button\n                    title='Hire'\n                    className='button-post text-white btn-sm mt-4 px-4'\n                    onClick={() => router.push(`/hire/${user.id}`)}\n                  />\n                </>\n              )}\n            </div>\n          </div>\n          <div className='col-6 justify-content-right'>\n            <div\n              className='thumbnail-profile'\n              onClick={() => router.push(`/detail-post/${postLates[0].id}`)}\n            >\n              <img\n                src={imageLates && imageLates}\n                alt=''\n                width='100%'\n                height='100%'\n                style={{ padding: '24px', objectFit: 'fill' }}\n              />\n              <div className='background'></div>\n            </div>\n          </div>\n        </div>\n        <div className='my-work mt-5'>\n          <h5 className='text-bold'>My Works</h5>\n          <div className='row justify-start'>\n            {user.arts.length === 0 ? (\n              <h1 className='text-secondary mt-5 mx-auto' style={{}}>\n                Not art\n              </h1>\n            ) : (\n              user.arts &&\n              user.arts\n                .sort((a, b) => b.id - a.id)\n                .map((image, index) => (\n                  <div className='col-3 mb-3' key={index}>\n                    <img\n                      src={image.artImage}\n                      alt=''\n                      width='100%'\n                      height='100%'\n                      style={{ borderRadius: '4px', objectFit: 'fill' }}\n                    />\n                  </div>\n                ))\n            )}\n          </div>\n        </div>\n      </div>\n    </Fragment>\n  );\n}\n","/home/amanudin/Documents/bootcamp/final-task/client/src/components/atoms/textArea/index.jsx",[],"/home/amanudin/Documents/bootcamp/final-task/client/src/pages/test.jsx",["213"],"import { Fragment } from 'react';\nimport InputFile from '../components/atoms/inputFile';\nimport { AiOutlineCloudUpload } from 'react-icons/ai';\nimport InputDate from '../components/atoms/inputDate/index';\n\nexport default function Test() {\n  const handleChange = (e) => {\n    console.log(e);\n  };\n  return (\n    <Fragment>\n      <InputDate\n        type='date'\n        title='Start Project'\n        onChange={(e) => handleChange(e)}\n        icon={<AiOutlineCloudUpload />}\n      />\n    </Fragment>\n  );\n}\n","/home/amanudin/Documents/bootcamp/final-task/client/src/pages/transaction/index.jsx",[],"/home/amanudin/Documents/bootcamp/final-task/client/src/pages/uploadProject/index.jsx",[],"/home/amanudin/Documents/bootcamp/final-task/client/src/components/molecules/uploadProject/index.jsx",[],"/home/amanudin/Documents/bootcamp/final-task/client/src/components/atoms/inputDate/index.jsx",[],"/home/amanudin/Documents/bootcamp/final-task/client/src/components/atoms/modal/index.jsx",[],"/home/amanudin/Documents/bootcamp/final-task/client/src/pages/detailProject/index.jsx",[],"/home/amanudin/Documents/bootcamp/final-task/client/src/components/molecules/detailProject/index.jsx",["214"],"import { Fragment, useEffect, useState } from 'react';\nimport Button from '../../atoms/button';\nimport { useParams, useHistory } from 'react-router-dom';\nimport { API } from '../../../config/api';\nimport axios from 'axios';\nimport './detailProject.css';\nimport Loading from '../../atoms/loading';\n\nexport default function DetailProject() {\n  const [hire, setHire] = useState('');\n  const [project, setProject] = useState('');\n  const [loading, setLoading] = useState(true);\n  const [indexImage, setIndexImage] = useState(0);\n  const { id } = useParams();\n  const router = useHistory();\n\n  const fetchHire = async () => {\n    try {\n      setLoading(true);\n      const response = await API(`/transaction/order/${id}`);\n      setHire(response.data.data.order);\n\n      setLoading(false);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const acceptProject = async (e) => {\n    e.preventDefault();\n    try {\n      setLoading(true);\n      await API.put(`/confirm-hire/${id}`);\n      setLoading(false);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  const rejectProject = async (e) => {\n    e.preventDefault();\n    try {\n      await API.delete(`/hire/${id}`);\n      router.push('/transaction');\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  const fetchProject = async () => {\n    try {\n      setLoading(true);\n      const response = await API(`/project/${id}`);\n      setProject(response.data.data.project);\n      setLoading(false);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const download = async (e) => {\n    try {\n      console.log(e.target.src);\n      const response = await axios.get(e.target.src, { responseType: 'blob' });\n      const url = window.URL.createObjectURL(new Blob([response.data]));\n\n      let link = document.createElement('a');\n\n      link.href = url;\n      console.log(link);\n\n      link.setAttribute('download', 'image.png');\n      document.body.appendChild(link);\n      link.click();\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const handleChangeImage = (e) => {\n    setIndexImage(e.target.id);\n  };\n\n  useEffect(() => {\n    fetchProject();\n    fetchHire();\n  }, []);\n\n  console.log(hire);\n  return loading ? (\n    <Loading />\n  ) : (\n    <Fragment>\n      <div\n        className='container'\n        style={{ marginTop: '120px', marginBottom: '100px' }}\n      >\n        <div className='row'>\n          <div className='col-8'>\n            <div className='image-project' style={{ height: '400px' }}>\n              <img\n                src={project.images[indexImage].image}\n                width='100%'\n                height='100%'\n                className='img-project'\n                style={{ objectFit: 'cover', cursor: 'pointer' }}\n                alt=''\n                onClick={(e) => download(e)}\n              />\n            </div>\n            <div\n              className='sub-image d-flex mt-3'\n              style={{ width: '150px', cursor: 'pointer' }}\n            >\n              {project.images &&\n                project.images.map((image, index) => {\n                  return (\n                    <img\n                      key={index}\n                      id={index}\n                      src={image.image}\n                      alt=''\n                      width='100%'\n                      onClick={(e) => handleChangeImage(e)}\n                      style={{ paddingRight: '20px', objectFit: 'cover' }}\n                    />\n                  );\n                })}\n            </div>\n          </div>\n          <div className='col-4'>\n            <div className='container'>\n              <div className='description'>{project.description}</div>\n              <div className='button-action mt-4'>\n                {hire.status && hire.status === 'Complete' ? (\n                  <>\n                    <Button\n                      title='Accept'\n                      onClick={acceptProject}\n                      className='button-post text-white btn-sm'\n                    />\n                    <Button\n                      title='Cancel'\n                      className='btn-sm ml-4'\n                      style={{ background: 'red', color: '#fff  ' }}\n                      onClick={rejectProject}\n                    />\n                  </>\n                ) : null}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </Fragment>\n  );\n}\n","/home/amanudin/Documents/bootcamp/final-task/client/src/components/molecules/home/index.jsx",[],"/home/amanudin/Documents/bootcamp/final-task/client/src/components/molecules/following/index.jsx",[],"/home/amanudin/Documents/bootcamp/final-task/client/src/components/atoms/preview/index.jsx",["215"],"import { useEffect, useState } from 'react';\nimport './preview.css';\n\nexport default function Preview({ file, isMainPreview }) {\n  const [filename, setFilename] = useState();\n  const getPreview = () => {\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n    reader.onloadend = () => {\n      setFilename(reader.result);\n    };\n  };\n\n  useEffect(() => {\n    getPreview();\n  }, []);\n\n  return isMainPreview ? (\n    <img\n      src={filename}\n      alt='preview'\n      className='project-photo-preview-primary'\n    />\n  ) : (\n    <img\n      src={filename}\n      alt='preview'\n      className='project-photo-preview-secondary'\n    />\n  );\n}\n","/home/amanudin/Documents/bootcamp/final-task/client/src/components/atoms/modalAlert/index.jsx",[],"/home/amanudin/Documents/bootcamp/final-task/client/src/components/molecules/todayPost/index.jsx",["216","217","218","219"],"import { Fragment, useState, useEffect } from 'react';\nimport { API } from '../../../config/api';\nimport Gallery from 'react-photo-gallery';\nimport Moment from 'moment';\n\nexport default function TodaysPost({ key, photos, onClick }) {\n  // const getTime = (time) => {\n  //   const d = new Date();\n  //   const date = 24 * 60 * 60;\n  //   const today = d + date;\n  //   // const startDate = date.getDate();\n  //   // const result = time + today;\n  //   console.log(d.getHours() * 60 * 60 + d.getMinutes() * 60 + d.getSeconds());\n  //   console.log(time.getTime() / (date * 60 * 4));\n  //   console.log(Moment(time).format());\n  // };\n  // const getData = async () => {\n  //   try {\n  //     const response = await API('/posts');\n  //     // console.log(response);\n  //   } catch (err) {\n  //     console.log(err);\n  //   }\n  // };\n\n  // useEffect(() => {\n  //   getData();\n  // }, []);\n\n  // const date = new Date();\n  // // console.log(date);\n  // getTime(date);\n  return (\n    <Fragment>\n      {/* <h2 className='text-secondary text-center' style={{ marginTop: '150px' }}>\n        Not a Post\n      </h2> */}\n\n      <div className='container'>\n        <h5>All Posts</h5>\n        <hr />\n        <div className='mt-4 img-home'>\n          <Gallery\n            key={key}\n            photos={photos}\n            onClick={onClick}\n            className='gallery-photo'\n            direction={'row'}\n          />\n        </div>\n      </div>\n    </Fragment>\n  );\n}\n","/home/amanudin/Documents/bootcamp/final-task/client/src/components/atoms/loading/index.jsx",[],{"ruleId":"220","replacedBy":"221"},{"ruleId":"222","replacedBy":"223"},{"ruleId":"224","severity":1,"message":"225","line":28,"column":10,"nodeType":"226","messageId":"227","endLine":28,"endColumn":15},{"ruleId":"228","severity":1,"message":"229","line":55,"column":6,"nodeType":"230","endLine":55,"endColumn":8,"suggestions":"231"},{"ruleId":"224","severity":1,"message":"225","line":12,"column":10,"nodeType":"226","messageId":"227","endLine":12,"endColumn":15},{"ruleId":"224","severity":1,"message":"225","line":11,"column":10,"nodeType":"226","messageId":"227","endLine":11,"endColumn":15},{"ruleId":"224","severity":1,"message":"232","line":5,"column":8,"nodeType":"226","messageId":"227","endLine":5,"endColumn":22},{"ruleId":"224","severity":1,"message":"225","line":15,"column":10,"nodeType":"226","messageId":"227","endLine":15,"endColumn":15},{"ruleId":"228","severity":1,"message":"233","line":42,"column":6,"nodeType":"230","endLine":42,"endColumn":8,"suggestions":"234"},{"ruleId":"224","severity":1,"message":"225","line":16,"column":10,"nodeType":"226","messageId":"227","endLine":16,"endColumn":15},{"ruleId":"224","severity":1,"message":"235","line":18,"column":10,"nodeType":"226","messageId":"227","endLine":18,"endColumn":17},{"ruleId":"224","severity":1,"message":"236","line":20,"column":10,"nodeType":"226","messageId":"227","endLine":20,"endColumn":17},{"ruleId":"224","severity":1,"message":"237","line":20,"column":19,"nodeType":"226","messageId":"227","endLine":20,"endColumn":29},{"ruleId":"238","severity":1,"message":"239","line":54,"column":24,"nodeType":"240","messageId":"241","endLine":54,"endColumn":26},{"ruleId":"238","severity":1,"message":"239","line":55,"column":25,"nodeType":"240","messageId":"241","endLine":55,"endColumn":27},{"ruleId":"238","severity":1,"message":"239","line":85,"column":24,"nodeType":"240","messageId":"241","endLine":85,"endColumn":26},{"ruleId":"238","severity":1,"message":"239","line":86,"column":25,"nodeType":"240","messageId":"241","endLine":86,"endColumn":27},{"ruleId":"238","severity":1,"message":"239","line":122,"column":25,"nodeType":"240","messageId":"241","endLine":122,"endColumn":27},{"ruleId":"228","severity":1,"message":"242","line":74,"column":6,"nodeType":"230","endLine":74,"endColumn":12,"suggestions":"243"},{"ruleId":"224","severity":1,"message":"232","line":3,"column":8,"nodeType":"226","messageId":"227","endLine":3,"endColumn":22},{"ruleId":"224","severity":1,"message":"232","line":3,"column":8,"nodeType":"226","messageId":"227","endLine":3,"endColumn":22},{"ruleId":"224","severity":1,"message":"225","line":11,"column":10,"nodeType":"226","messageId":"227","endLine":11,"endColumn":15},{"ruleId":"224","severity":1,"message":"244","line":11,"column":17,"nodeType":"226","messageId":"227","endLine":11,"endColumn":25},{"ruleId":"228","severity":1,"message":"245","line":71,"column":6,"nodeType":"230","endLine":71,"endColumn":8,"suggestions":"246"},{"ruleId":"228","severity":1,"message":"247","line":66,"column":6,"nodeType":"230","endLine":66,"endColumn":8,"suggestions":"248"},{"ruleId":"224","severity":1,"message":"249","line":2,"column":8,"nodeType":"226","messageId":"227","endLine":2,"endColumn":17},{"ruleId":"228","severity":1,"message":"250","line":85,"column":6,"nodeType":"230","endLine":85,"endColumn":8,"suggestions":"251"},{"ruleId":"228","severity":1,"message":"252","line":16,"column":6,"nodeType":"230","endLine":16,"endColumn":8,"suggestions":"253"},{"ruleId":"224","severity":1,"message":"254","line":1,"column":20,"nodeType":"226","messageId":"227","endLine":1,"endColumn":28},{"ruleId":"224","severity":1,"message":"255","line":1,"column":30,"nodeType":"226","messageId":"227","endLine":1,"endColumn":39},{"ruleId":"224","severity":1,"message":"256","line":2,"column":10,"nodeType":"226","messageId":"227","endLine":2,"endColumn":13},{"ruleId":"224","severity":1,"message":"257","line":4,"column":8,"nodeType":"226","messageId":"227","endLine":4,"endColumn":14},"no-native-reassign",["258"],"no-negated-in-lhs",["259"],"no-unused-vars","'state' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loadUser'. Either include it or remove the dependency array.","ArrayExpression",["260"],"'DefaultProfile' is defined but never used.","React Hook useEffect has a missing dependency: 'getUser'. Either include it or remove the dependency array.",["261"],"'loading' is assigned a value but never used.","'artData' is assigned a value but never used.","'setArtData' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has a missing dependency: 'transaction'. Either include it or remove the dependency array.",["262"],"'dispatch' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'fetchDetailPost'. Either include it or remove the dependency array.",["263"],"React Hook useEffect has a missing dependency: 'fetchUser'. Either include it or remove the dependency array.",["264"],"'InputFile' is defined but never used.","React Hook useEffect has missing dependencies: 'fetchHire' and 'fetchProject'. Either include them or remove the dependency array.",["265"],"React Hook useEffect has a missing dependency: 'getPreview'. Either include it or remove the dependency array.",["266"],"'useState' is defined but never used.","'useEffect' is defined but never used.","'API' is defined but never used.","'Moment' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"267","fix":"268"},{"desc":"269","fix":"270"},{"desc":"271","fix":"272"},{"desc":"273","fix":"274"},{"desc":"275","fix":"276"},{"desc":"277","fix":"278"},{"desc":"279","fix":"280"},"Update the dependencies array to be: [loadUser]",{"range":"281","text":"282"},"Update the dependencies array to be: [getUser]",{"range":"283","text":"284"},"Update the dependencies array to be: [text, transaction]",{"range":"285","text":"286"},"Update the dependencies array to be: [fetchDetailPost]",{"range":"287","text":"288"},"Update the dependencies array to be: [fetchUser]",{"range":"289","text":"290"},"Update the dependencies array to be: [fetchHire, fetchProject]",{"range":"291","text":"292"},"Update the dependencies array to be: [getPreview]",{"range":"293","text":"294"},[1672,1674],"[loadUser]",[1213,1215],"[getUser]",[1974,1980],"[text, transaction]",[1910,1912],"[fetchDetailPost]",[1723,1725],"[fetchUser]",[2142,2144],"[fetchHire, fetchProject]",[394,396],"[getPreview]"]